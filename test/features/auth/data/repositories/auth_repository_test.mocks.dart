// Mocks generated by Mockito 5.4.6 from annotations
// in slot_booking_app/test/features/auth/data/repositories/auth_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:slot_booking_app/features/auth/data/data_provider/auth_data_provider.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [AuthDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthDataProvider extends _i1.Mock implements _i2.AuthDataProvider {
  MockAuthDataProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<Map<String, dynamic>> login({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#login, [], {#email: email, #password: password}),
            returnValue: _i3.Future<Map<String, dynamic>>.value({}),
          )
          as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> register({
    required String? email,
    required String? password,
    required String? name,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#register, [], {
              #email: email,
              #password: password,
              #name: name,
            }),
            returnValue: _i3.Future<Map<String, dynamic>>.value({}),
          )
          as _i3.Future<Map<String, dynamic>>);
}
